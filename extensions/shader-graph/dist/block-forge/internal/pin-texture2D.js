'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const pin_1 = require("../pin");
class TexturePinAction extends pin_1.PinAction {
    exec(params) {
        const $pin = params.forge.getPinElement(this.detail.blockName, 'input', this.detail.index);
        if ($pin) {
            // @ts-ignore
            const pin = $pin.__pin;
            pin.details.value = this.detail.target;
            pin.onUpdate();
        }
    }
    revertAction() {
        return new TexturePinAction(this.pin, {
            source: this.detail.target,
            target: this.detail.source,
        });
    }
}
/**
 * Float
 * 浮点类型的引脚
 */
class Texture2DPin extends pin_1.Pin {
    constructor() {
        super(...arguments);
        this.color = '#9691b2';
        this.line = 'normal';
        this.details = {
            value: {
                uuid: '',
            },
        };
        this.style = `
        .image-preview {
            width: 100%;
            height: 100px;
            background-color: black;
        }
    `;
        this.contentSlot = `<ui-asset style="flex: 1;" ref="texture2D" droppable="cc.Texture2D"></ui-asset>`;
        this.childrenSlot = [
            `
<ui-section ref="section" class="config">
    <ui-image class="image-preview" ref="imagePreview"></ui-image>
</ui-section>
`,
        ];
    }
    onInit() {
        const $texture2D = this.refs.texture2D;
        $texture2D.addEventListener('confirm', () => {
            if (!this.details) {
                this.details = {
                    value: {
                        uuid: $texture2D.value,
                    },
                };
            }
            const action = new TexturePinAction(this, {
                source: this.details.value,
                target: { uuid: $texture2D.value },
            });
            this.exec(action);
        });
    }
    changeImagePreview(uuid) {
        const $imagePreview = this.refs.imagePreview;
        // @ts-ignore
        $imagePreview.value = uuid;
        if (uuid) {
            this.refs.section.style.display = '';
            this.refs.section.setAttribute('expand', '');
        }
        else {
            this.refs.section.style.display = 'none';
        }
    }
    onUpdate() {
        const $texture2D = this.refs.texture2D;
        $texture2D.value = this.details.value.uuid;
        this.changeImagePreview(this.details.value.uuid);
    }
}
Texture2DPin.type = 'texture2D';
(0, pin_1.declarePin)(Texture2DPin);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGluLXRleHR1cmUyRC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ibG9jay1mb3JnZS9pbnRlcm5hbC9waW4tdGV4dHVyZTJELnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7QUFHYixnQ0FBb0Q7QUFRcEQsTUFBTSxnQkFBaUIsU0FBUSxlQUc3QjtJQUVFLElBQUksQ0FBQyxNQUVKO1FBQ0csTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0YsSUFBSSxJQUFJLEVBQUU7WUFDTixhQUFhO1lBQ2IsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQWlCLENBQUM7WUFDbkMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7WUFDdkMsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ2xCO0lBQ0wsQ0FBQztJQUVELFlBQVk7UUFDUixPQUFPLElBQUksZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNsQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNO1lBQzFCLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU07U0FDN0IsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNKO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxZQUFhLFNBQVEsU0FBb0I7SUFBL0M7O1FBR0ksVUFBSyxHQUFHLFNBQVMsQ0FBQztRQUNsQixTQUFJLEdBQUcsUUFBUSxDQUFDO1FBQ2hCLFlBQU8sR0FBRztZQUNOLEtBQUssRUFBRTtnQkFDSCxJQUFJLEVBQUUsRUFBRTthQUNYO1NBQ0osQ0FBQztRQUVGLFVBQUssR0FBRzs7Ozs7O0tBTVAsQ0FBQztRQUVGLGdCQUFXLEdBQVcsaUZBQWlGLENBQUM7UUFDeEcsaUJBQVksR0FBRztZQUNYOzs7O0NBSVA7U0FDSSxDQUFDO0lBdUNOLENBQUM7SUFyQ0csTUFBTTtRQUNGLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBNkIsQ0FBQztRQUMzRCxVQUFVLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRTtZQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDZixJQUFJLENBQUMsT0FBTyxHQUFHO29CQUNYLEtBQUssRUFBRTt3QkFDSCxJQUFJLEVBQUUsVUFBVSxDQUFDLEtBQUs7cUJBQ3pCO2lCQUNKLENBQUM7YUFDTDtZQUVELE1BQU0sTUFBTSxHQUFHLElBQUksZ0JBQWdCLENBQUMsSUFBSSxFQUFFO2dCQUN0QyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLO2dCQUMxQixNQUFNLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLEtBQUssRUFBRTthQUNyQyxDQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3RCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELGtCQUFrQixDQUFDLElBQVk7UUFDM0IsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDN0MsYUFBYTtRQUNiLGFBQWEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQzNCLElBQUksSUFBSSxFQUFFO1lBQ04sSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7WUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUNoRDthQUFNO1lBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7U0FDNUM7SUFDTCxDQUFDO0lBRUQsUUFBUTtRQUNKLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBNkIsQ0FBQztRQUMzRCxVQUFVLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUUzQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7QUEvRE0saUJBQUksR0FBRyxXQUFXLENBQUM7QUFpRTlCLElBQUEsZ0JBQVUsRUFBQyxZQUFZLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHR5cGUgeyBIVE1MR3JhcGhGb3JnZUVsZW1lbnQgfSBmcm9tICcuLi9mb3JnZSc7XG5pbXBvcnQgeyBQaW4sIGRlY2xhcmVQaW4sIFBpbkFjdGlvbiB9IGZyb20gJy4uL3Bpbic7XG5cbnR5cGUgVGV4dHVyZTJERGV0YWlsID0ge1xuICAgIHZhbHVlOiB7XG4gICAgICAgIHV1aWQ6IHN0cmluZ1xuICAgIH07XG59O1xuXG5jbGFzcyBUZXh0dXJlUGluQWN0aW9uIGV4dGVuZHMgUGluQWN0aW9uPHtcbiAgICBzb3VyY2U6IFRleHR1cmUyRERldGFpbFsndmFsdWUnXSxcbiAgICB0YXJnZXQ6IFRleHR1cmUyRERldGFpbFsndmFsdWUnXSxcbn0+IHtcblxuICAgIGV4ZWMocGFyYW1zOiB7XG4gICAgICAgIGZvcmdlOiBIVE1MR3JhcGhGb3JnZUVsZW1lbnRcbiAgICB9KSB7XG4gICAgICAgIGNvbnN0ICRwaW4gPSBwYXJhbXMuZm9yZ2UuZ2V0UGluRWxlbWVudCh0aGlzLmRldGFpbC5ibG9ja05hbWUsICdpbnB1dCcsIHRoaXMuZGV0YWlsLmluZGV4KTtcbiAgICAgICAgaWYgKCRwaW4pIHtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGNvbnN0IHBpbiA9ICRwaW4uX19waW4gYXMgRmxvYXRQaW47XG4gICAgICAgICAgICBwaW4uZGV0YWlscy52YWx1ZSA9IHRoaXMuZGV0YWlsLnRhcmdldDtcbiAgICAgICAgICAgIHBpbi5vblVwZGF0ZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV2ZXJ0QWN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbmV3IFRleHR1cmVQaW5BY3Rpb24odGhpcy5waW4sIHtcbiAgICAgICAgICAgIHNvdXJjZTogdGhpcy5kZXRhaWwudGFyZ2V0LFxuICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLmRldGFpbC5zb3VyY2UsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuLyoqXG4gKiBGbG9hdFxuICog5rWu54K557G75Z6L55qE5byV6ISaXG4gKi9cbmNsYXNzIFRleHR1cmUyRFBpbiBleHRlbmRzIFBpbjxUZXh0dXJlMkREZXRhaWw+IHtcbiAgICBzdGF0aWMgdHlwZSA9ICd0ZXh0dXJlMkQnO1xuXG4gICAgY29sb3IgPSAnIzk2OTFiMic7XG4gICAgbGluZSA9ICdub3JtYWwnO1xuICAgIGRldGFpbHMgPSB7XG4gICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICB1dWlkOiAnJyxcbiAgICAgICAgfSxcbiAgICB9O1xuXG4gICAgc3R5bGUgPSBgXG4gICAgICAgIC5pbWFnZS1wcmV2aWV3IHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgICAgICB9XG4gICAgYDtcblxuICAgIGNvbnRlbnRTbG90ID0gLypodG1sKi9gPHVpLWFzc2V0IHN0eWxlPVwiZmxleDogMTtcIiByZWY9XCJ0ZXh0dXJlMkRcIiBkcm9wcGFibGU9XCJjYy5UZXh0dXJlMkRcIj48L3VpLWFzc2V0PmA7XG4gICAgY2hpbGRyZW5TbG90ID0gW1xuICAgICAgICBgXG48dWktc2VjdGlvbiByZWY9XCJzZWN0aW9uXCIgY2xhc3M9XCJjb25maWdcIj5cbiAgICA8dWktaW1hZ2UgY2xhc3M9XCJpbWFnZS1wcmV2aWV3XCIgcmVmPVwiaW1hZ2VQcmV2aWV3XCI+PC91aS1pbWFnZT5cbjwvdWktc2VjdGlvbj5cbmAsXG4gICAgXTtcblxuICAgIG9uSW5pdCgpIHtcbiAgICAgICAgY29uc3QgJHRleHR1cmUyRCA9IHRoaXMucmVmcy50ZXh0dXJlMkQgYXMgSFRNTElucHV0RWxlbWVudDtcbiAgICAgICAgJHRleHR1cmUyRC5hZGRFdmVudExpc3RlbmVyKCdjb25maXJtJywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmRldGFpbHMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRldGFpbHMgPSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1dWlkOiAkdGV4dHVyZTJELnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IG5ldyBUZXh0dXJlUGluQWN0aW9uKHRoaXMsIHtcbiAgICAgICAgICAgICAgICBzb3VyY2U6IHRoaXMuZGV0YWlscy52YWx1ZSxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IHsgdXVpZDogJHRleHR1cmUyRC52YWx1ZSB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmV4ZWMoYWN0aW9uKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY2hhbmdlSW1hZ2VQcmV2aWV3KHV1aWQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCAkaW1hZ2VQcmV2aWV3ID0gdGhpcy5yZWZzLmltYWdlUHJldmlldztcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAkaW1hZ2VQcmV2aWV3LnZhbHVlID0gdXVpZDtcbiAgICAgICAgaWYgKHV1aWQpIHtcbiAgICAgICAgICAgIHRoaXMucmVmcy5zZWN0aW9uLnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICAgICAgICAgIHRoaXMucmVmcy5zZWN0aW9uLnNldEF0dHJpYnV0ZSgnZXhwYW5kJywgJycpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5yZWZzLnNlY3Rpb24uc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uVXBkYXRlKCkge1xuICAgICAgICBjb25zdCAkdGV4dHVyZTJEID0gdGhpcy5yZWZzLnRleHR1cmUyRCBhcyBIVE1MSW5wdXRFbGVtZW50O1xuICAgICAgICAkdGV4dHVyZTJELnZhbHVlID0gdGhpcy5kZXRhaWxzLnZhbHVlLnV1aWQ7XG5cbiAgICAgICAgdGhpcy5jaGFuZ2VJbWFnZVByZXZpZXcodGhpcy5kZXRhaWxzLnZhbHVlLnV1aWQpO1xuICAgIH1cbn1cbmRlY2xhcmVQaW4oVGV4dHVyZTJEUGluKTtcbiJdfQ==