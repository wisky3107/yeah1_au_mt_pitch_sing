'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const pin_1 = require("../pin");
class TexturePinAction extends pin_1.PinAction {
    exec(params) {
        const $pin = params.forge.getPinElement(this.detail.blockName, 'input', this.detail.index);
        if ($pin) {
            // @ts-ignore
            const pin = $pin.__pin;
            pin.details.value = this.detail.target;
            pin.onUpdate();
        }
    }
    revertAction() {
        return new TexturePinAction(this.pin, {
            source: this.detail.target,
            target: this.detail.source,
        });
    }
}
/**
 * Float
 * 浮点类型的引脚
 */
class TextureCubePin extends pin_1.Pin {
    constructor() {
        super(...arguments);
        this.color = '#9691b2';
        this.line = 'normal';
        this.details = {
            value: {
                uuid: '',
            },
        };
        this.contentSlot = `<ui-asset ref="textureCube" droppable="cc.TextureCube"></ui-asset>`;
        this.childrenSlot = [];
    }
    onInit() {
        const $texture2D = this.refs.textureCube;
        $texture2D.addEventListener('confirm', () => {
            if (!this.details) {
                this.details = {
                    value: {
                        uuid: $texture2D.value,
                    },
                };
            }
            const action = new TexturePinAction(this, {
                source: this.details.value,
                target: { uuid: $texture2D.value },
            });
            this.exec(action);
        });
    }
    onUpdate() {
        const $texture2D = this.refs.textureCube;
        $texture2D.value = this.details.value.uuid;
    }
}
TextureCubePin.type = 'textureCube';
(0, pin_1.declarePin)(TextureCubePin);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGluLXRleHR1cmVDdWJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2Jsb2NrLWZvcmdlL2ludGVybmFsL3Bpbi10ZXh0dXJlQ3ViZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7O0FBR2IsZ0NBQW9EO0FBUXBELE1BQU0sZ0JBQWlCLFNBQVEsZUFHN0I7SUFFRSxJQUFJLENBQUMsTUFFSjtRQUNHLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzNGLElBQUksSUFBSSxFQUFFO1lBQ04sYUFBYTtZQUNiLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFpQixDQUFDO1lBQ25DLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQ3ZDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUNsQjtJQUNMLENBQUM7SUFFRCxZQUFZO1FBQ1IsT0FBTyxJQUFJLGdCQUFnQixDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDbEMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTTtZQUMxQixNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNO1NBQzdCLENBQUMsQ0FBQztJQUNQLENBQUM7Q0FDSjtBQUVEOzs7R0FHRztBQUNILE1BQU0sY0FBZSxTQUFRLFNBQXNCO0lBQW5EOztRQUdJLFVBQUssR0FBRyxTQUFTLENBQUM7UUFDbEIsU0FBSSxHQUFHLFFBQVEsQ0FBQztRQUNoQixZQUFPLEdBQUc7WUFDTixLQUFLLEVBQUU7Z0JBQ0gsSUFBSSxFQUFFLEVBQUU7YUFDWDtTQUNKLENBQUM7UUFFRixnQkFBVyxHQUFXLG9FQUFvRSxDQUFDO1FBQzNGLGlCQUFZLEdBQUcsRUFBRSxDQUFDO0lBeUJ0QixDQUFDO0lBdkJHLE1BQU07UUFDRixNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQStCLENBQUM7UUFDN0QsVUFBVSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxHQUFHLEVBQUU7WUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ2YsSUFBSSxDQUFDLE9BQU8sR0FBRztvQkFDWCxLQUFLLEVBQUU7d0JBQ0gsSUFBSSxFQUFFLFVBQVUsQ0FBQyxLQUFLO3FCQUN6QjtpQkFDSixDQUFDO2FBQ0w7WUFFRCxNQUFNLE1BQU0sR0FBRyxJQUFJLGdCQUFnQixDQUFDLElBQUksRUFBRTtnQkFDdEMsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSztnQkFDMUIsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsQ0FBQyxLQUFLLEVBQUU7YUFDckMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN0QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxRQUFRO1FBQ0osTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUErQixDQUFDO1FBQzdELFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO0lBQy9DLENBQUM7O0FBbkNNLG1CQUFJLEdBQUcsYUFBYSxDQUFDO0FBcUNoQyxJQUFBLGdCQUFVLEVBQUMsY0FBYyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB0eXBlIHsgSFRNTEdyYXBoRm9yZ2VFbGVtZW50IH0gZnJvbSAnLi4vZm9yZ2UnO1xuaW1wb3J0IHsgUGluLCBkZWNsYXJlUGluLCBQaW5BY3Rpb24gfSBmcm9tICcuLi9waW4nO1xuXG50eXBlIFRleHR1cmVDdWJlRGV0YWlsID0ge1xuICAgIHZhbHVlOiB7XG4gICAgICAgIHV1aWQ6IHN0cmluZ1xuICAgIH07XG59O1xuXG5jbGFzcyBUZXh0dXJlUGluQWN0aW9uIGV4dGVuZHMgUGluQWN0aW9uPHtcbiAgICBzb3VyY2U6IFRleHR1cmVDdWJlRGV0YWlsWyd2YWx1ZSddLFxuICAgIHRhcmdldDogVGV4dHVyZUN1YmVEZXRhaWxbJ3ZhbHVlJ10sXG59PiB7XG5cbiAgICBleGVjKHBhcmFtczoge1xuICAgICAgICBmb3JnZTogSFRNTEdyYXBoRm9yZ2VFbGVtZW50XG4gICAgfSkge1xuICAgICAgICBjb25zdCAkcGluID0gcGFyYW1zLmZvcmdlLmdldFBpbkVsZW1lbnQodGhpcy5kZXRhaWwuYmxvY2tOYW1lLCAnaW5wdXQnLCB0aGlzLmRldGFpbC5pbmRleCk7XG4gICAgICAgIGlmICgkcGluKSB7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICBjb25zdCBwaW4gPSAkcGluLl9fcGluIGFzIEZsb2F0UGluO1xuICAgICAgICAgICAgcGluLmRldGFpbHMudmFsdWUgPSB0aGlzLmRldGFpbC50YXJnZXQ7XG4gICAgICAgICAgICBwaW4ub25VcGRhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldmVydEFjdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBUZXh0dXJlUGluQWN0aW9uKHRoaXMucGluLCB7XG4gICAgICAgICAgICBzb3VyY2U6IHRoaXMuZGV0YWlsLnRhcmdldCxcbiAgICAgICAgICAgIHRhcmdldDogdGhpcy5kZXRhaWwuc291cmNlLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbi8qKlxuICogRmxvYXRcbiAqIOa1rueCueexu+Wei+eahOW8leiEmlxuICovXG5jbGFzcyBUZXh0dXJlQ3ViZVBpbiBleHRlbmRzIFBpbjxUZXh0dXJlQ3ViZURldGFpbD4ge1xuICAgIHN0YXRpYyB0eXBlID0gJ3RleHR1cmVDdWJlJztcblxuICAgIGNvbG9yID0gJyM5NjkxYjInO1xuICAgIGxpbmUgPSAnbm9ybWFsJztcbiAgICBkZXRhaWxzID0ge1xuICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgdXVpZDogJycsXG4gICAgICAgIH0sXG4gICAgfTtcblxuICAgIGNvbnRlbnRTbG90ID0gLypodG1sKi9gPHVpLWFzc2V0IHJlZj1cInRleHR1cmVDdWJlXCIgZHJvcHBhYmxlPVwiY2MuVGV4dHVyZUN1YmVcIj48L3VpLWFzc2V0PmA7XG4gICAgY2hpbGRyZW5TbG90ID0gW107XG5cbiAgICBvbkluaXQoKSB7XG4gICAgICAgIGNvbnN0ICR0ZXh0dXJlMkQgPSB0aGlzLnJlZnMudGV4dHVyZUN1YmUgYXMgSFRNTElucHV0RWxlbWVudDtcbiAgICAgICAgJHRleHR1cmUyRC5hZGRFdmVudExpc3RlbmVyKCdjb25maXJtJywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmRldGFpbHMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRldGFpbHMgPSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1dWlkOiAkdGV4dHVyZTJELnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IG5ldyBUZXh0dXJlUGluQWN0aW9uKHRoaXMsIHtcbiAgICAgICAgICAgICAgICBzb3VyY2U6IHRoaXMuZGV0YWlscy52YWx1ZSxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IHsgdXVpZDogJHRleHR1cmUyRC52YWx1ZSB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmV4ZWMoYWN0aW9uKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgb25VcGRhdGUoKSB7XG4gICAgICAgIGNvbnN0ICR0ZXh0dXJlMkQgPSB0aGlzLnJlZnMudGV4dHVyZUN1YmUgYXMgSFRNTElucHV0RWxlbWVudDtcbiAgICAgICAgJHRleHR1cmUyRC52YWx1ZSA9IHRoaXMuZGV0YWlscy52YWx1ZS51dWlkO1xuICAgIH1cbn1cbmRlY2xhcmVQaW4oVGV4dHVyZUN1YmVQaW4pO1xuIl19