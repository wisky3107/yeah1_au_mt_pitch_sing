"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertMenuData = exports.filterMenuByKeyword = exports.getTitleBarHeight = exports.getBoundingClientRect = exports.validatePosition = void 0;
function validatePosition(position) {
    return !(!position || ((position.left !== undefined && position.left === '') ||
        (position.right !== undefined && position.right === '') ||
        (position.top !== undefined && position.top === '') ||
        (position.bottom !== undefined && position.bottom === '')));
}
exports.validatePosition = validatePosition;
function getBoundingClientRect(target) {
    if (document.body.getAttribute('name') === 'sub') {
        return {
            left: target.clientLeft,
            right: target.clientLeft + target.clientWidth,
            top: target.clientTop,
            bottom: target.clientTop + target.clientHeight,
            width: target.clientWidth,
            height: target.clientHeight,
        };
    }
    return target.getBoundingClientRect();
}
exports.getBoundingClientRect = getBoundingClientRect;
/**
 * 获取 title bar 的高度
 */
function getTitleBarHeight() {
    let titleBarHeight = 25; // 系统 titleBar 的高度
    if (document.body.getAttribute('name') === 'sub') {
        // 窗口 title 的高度
        titleBarHeight += 50;
    }
    return titleBarHeight;
}
exports.getTitleBarHeight = getTitleBarHeight;
function filterMenuByKeyword(tree, keyword) {
    const result = {
        firstSelect: null,
        filterTree: [],
    };
    const keywordLowerCase = keyword.toLowerCase();
    function filterRecursive(menuItems) {
        for (const item of menuItems) {
            item.show = false;
            const text = item.detail.value.toLowerCase();
            if (item.children.length === 0 &&
                (text.startsWith(keywordLowerCase) || text.includes(keywordLowerCase))) {
                item.show = true;
                let target = item.parent;
                while (target) {
                    if (target.show)
                        break;
                    target.show = true;
                    target = target.parent;
                }
            }
            if (item.children && item.children.length > 0) {
                filterRecursive(item.children);
            }
        }
    }
    filterRecursive(tree);
    const list = [];
    function filterItems(menuItems) {
        menuItems = menuItems.filter((item) => {
            if (item.show && item.children.length === 0) {
                list.push(item);
            }
            return item.show;
        });
        for (const menuItem of menuItems) {
            menuItem.children = filterItems(menuItem.children);
        }
        return menuItems;
    }
    return {
        filterTree: filterItems(tree),
        firstSelect: list[0],
    };
}
exports.filterMenuByKeyword = filterMenuByKeyword;
function convertMenuData(menuData, fold, parent) {
    return menuData.map((item) => {
        const submenu = item.submenu || [];
        const itemMenu = {
            parent: parent || null,
            detail: {
                addOptions: item.addOptions,
                value: item.label,
            },
            show: true,
            fold: fold,
            showArrow: submenu.length > 0,
            children: [],
        };
        itemMenu.children = convertMenuData(submenu, fold, itemMenu);
        return itemMenu;
    });
}
exports.convertMenuData = convertMenuData;
//# sourceMappingURL=data:application/json;base64,